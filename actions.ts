/* This file is autogenerated by liwe3-svelte */
/* eslint-disable @typescript-eslint/no-inferrable-types */
/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable @typescript-eslint/no-unused-vars */

/*=== f2c_start __file ===*/

/*=== f2c_end __file ===*/

import { get, patch, post, delete_, type LiWEFetcherOptions } from '$liwe3/utils/fetcher';

/**
 * # Add Comment
 * Creates a new comment for a specific object.
 * ## Operations
 * - Validate input parameters
 * - Check if target object exists
 * - Generate unique comment ID
 * - Save comment to database
 * - Return created comment object
 *
 * @param module - Module identifier [req]
 * @param id_obj - Object identifier [req]
 * @param text - Comment text content [req]
 * @param visible - Comment visibility [opt]
 *
 * @return comment: Comment
 *
 */
export const comments_add = async ( module: string, id_obj: string, text: string, visible?: boolean, _options?: LiWEFetcherOptions ) => {
	const res = await post( `/api/comments/add`, { 
		id_obj,
		module,
		text,
		visible
	 }, _options?.skipError ? _options.skipError : false );

	if (res.error) return res;

	/*=== f2c_start comments_add ===*/

	/*=== f2c_end comments_add ===*/

	return res.comment;
};

/**
 * # Delete Comment
 * Deletes an existing comment.
 * ## Operations
 * - Check if comment exists
 * - Verify user owns comment
 * - Remove comment from database
 *
 * @param id - Comment identifier [req]
 *
 * @return ok: boolean
 *
 */
export const comments_delete = async ( id: string, _options?: LiWEFetcherOptions ) => {
	const res = await delete_( `/api/comments/delete`, { id }, _options?.skipError ? _options.skipError : false );

	if (res.error) return res;

	/*=== f2c_start comments_delete ===*/

	/*=== f2c_end comments_delete ===*/

	return res.ok;
};

/**
 * @param module - comments module related [opt]
 *
 * @return comments: Comment
 *
 */
export const comments_admin_list = async ( module?: string, _options?: LiWEFetcherOptions ) => {
	const res = await get( `/api/comments/admin/list`, { module }, _options?.skipError ? _options.skipError : false );

	if (res.error) return res;

	/*=== f2c_start comments_admin_list ===*/

	/*=== f2c_end comments_admin_list ===*/

	return res.comments;
};

/**
 * @param id - Comment's ID [req]
 *
 * @return OK: boolean
 *
 */
export const comments_admin_del = async ( id: string, _options?: LiWEFetcherOptions ) => {
	const res = await delete_( `/apicomments/admin/del`, { id }, _options?.skipError ? _options.skipError : false );

	if (res.error) return res;

	/*=== f2c_start comments_admin_del ===*/

	/*=== f2c_end comments_admin_del ===*/

	return res.OK;
};
